// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgres"
  url      = env("JET_DATABASE_URL")
}

model Jet {
  id                 Int                    @id @default(autoincrement())
  model              String
  description        String
  userId             Int
  registrationNumber String                 @unique
  currentLocation    String
  availabilityStatus AvailabilityStatusEnum @default(available)
  status             StatusEnum             @default(active)
  availableHours     String
  price              Int
  priceDescription   String
  pictures           Json

  ranges     RangesOnJets[] // Short Range (Up to 2000 Nautical Miles), Medium Range (2000-5000 Nautical Miles), Long Range (5000+ Nautical Miles)
  capacities CapacitiesOnJets[] // Small jet (Up to 6 passengers), Midsize jet (7-10 passengers), Large Jet (11-19 passengers),
  facilities FacilitiesOnJets[] // Wi-Fi, Entertainment Systems, Catering, Conference Facilties, Pet Friendly

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Range {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  status    StatusEnum     @default(active)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  jets      RangesOnJets[]
}

model RangesOnJets {
  jetId     Int
  jet       Jet      @relation(fields: [jetId], references: [id])
  rangeId   Int
  range     Range    @relation(fields: [rangeId], references: [id])
  createdAt DateTime @default(now())

  @@id([jetId, rangeId])
}

model Capacity {
  id        Int                @id @default(autoincrement())
  name      String             @unique
  status    StatusEnum         @default(active)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  jets      CapacitiesOnJets[]
}

model CapacitiesOnJets {
  jetId      Int
  jet        Jet      @relation(fields: [jetId], references: [id])
  capacityId Int
  capacity   Capacity @relation(fields: [capacityId], references: [id])
  createdAt  DateTime @default(now())

  @@id([jetId, capacityId])
}

model Facility {
  id        Int                @id @default(autoincrement())
  name      String             @unique
  url       String?
  status    StatusEnum         @default(active)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  jets      FacilitiesOnJets[]
}

model FacilitiesOnJets {
  jetId      Int
  jet        Jet      @relation(fields: [jetId], references: [id])
  facilityId Int
  facility   Facility @relation(fields: [facilityId], references: [id])
  createdAt  DateTime @default(now())

  @@id([jetId, facilityId])
}

enum AvailabilityStatusEnum {
  available
  unavailable
  hired
}

enum StatusEnum {
  active
  inactive
}
